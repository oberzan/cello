---
- name: Setup variables
  set_fact:
    goroot: "/opt/go"
    gopath: "/opt/gopath/{{ env }}"
    fabricworkdir: "/opt/gopath/{{ env }}/fabric"
    fabricpath: "/opt/gopath/{{ env }}/src/github.com/hyperledger/fabric"
    fabriccapath: "/opt/gopath/{{ env }}/src/github.com/hyperledger/fabric-ca"
    target: "{{ target | default('configtxgen,configtxlator') }}"

- name: Setup hyperledger directory
  file:
    path: "{{ fabricpath }}"
    state: directory
    force: yes
    mode: 0775

- name: Clean the build log file
  file:
    path: "{{ gopath }}/build.log"
    state: "absent"

- name: Ensure container image directory is clean
  file:
    path: "{{ fabricworkdir }}/images"
    state: "{{ item }}"
  with_items:
    - "absent"
    - "directory"

# - name: Extract hyperledger fabric code
#   git:
#     repo: "{{ FABRIC_GIT_URL | default('http://gerrit.hyperledger.org/r/fabric') }}"
#     dest: "{{ fabricpath }}"
#     force: yes
#     refspec: "{{ GERRIT_REFSPEC | default('') }}"
#     version: "{{ (GERRIT_REFSPEC == '') | ternary('HEAD','FETCH_HEAD') }}"
#     depth: 1
#   tags: "code"

# - name: Extract hyperledger fabric-ca code
#   git:
#     repo: "{{ FABRIC_CA_GIT_URL | default('http://gerrit.hyperledger.org/r/fabric-ca') }}"
#     dest: "{{ fabriccapath }}"
#     force: yes
#     refspec: "{{ GERRIT_REFSPEC | default('') }}"
#     version: "{{ (GERRIT_REFSPEC == '') | ternary('HEAD','FETCH_HEAD') }}"
#     depth: 1
#   tags: "code"

# - name: Make targets
#   shell: "make {{ item }} >> {{ gopath }}/build.log"
#   args:
#     chdir: "{{ fabricpath }}"
#   with_items: "{{ target.split(',') }}"
#   environment:
#     GOROOT: "{{ goroot }}"
#     GOPATH: "{{ gopath }}"
#     PATH: "{{ ansible_env.PATH}}:{{ goroot }}/bin"
#   tags: "make"

# - name: Make fabric-ca-client
#   shell: "make fabric-ca-client >> {{ gopath }}/build.log"
#   args:
#     chdir: "{{ fabriccapath }}"
#   environment:
#     GOROOT: "{{ goroot }}"
#     GOPATH: "{{ gopath }}"
#     PATH: "{{ ansible_env.PATH}}:{{ goroot }}/bin"
#   tags: "make"

# - name: Figure out the build tag
#   shell: "git rev-parse --short HEAD"
#   args:
#     chdir: "{{ fabricpath }}"
#   register: rawtag
- name: Download fabric docker images
  include_tasks: "download.yml"
  when: fabric.baseimage_tag|length > 0
  tag: "downloadartifacts"

- name: build fabric artifacts
  include_tasks: "build.yml"
  when: fabric.baseimage_tag|length == 0
  tags: "buildartifacts"

- name: Setup hyperledger directory
  file:
    path: "{{ fabricpath }}/build"
    state: directory
    force: yes
    mode: 0775

- stat:
    path: "{{ fabricpath }}/build/bin/cryptogen"
  register: binexists

- name: Download fabric binaries
  unarchive:
    src: "{{ fabric.repo.bin }}"
    dest: "{{ fabricpath }}/build"
    remote_src: yes
  when: fabric.repo.bin|length > 0 and binexists.stat.exists == false
  tags: "downloadbin"

- name: Validate the version, baseimage_tag and helper_tag to be deployed
  fail:
    msg: >-
      the project version is empty, most likely configuration is not correct.
      Please check baseimage_tag and helper_tag are set correct or you set
      up to build fabric binaries and docker images!
  when: >
    project_version|length == 0 or baseimage_tag|length == 0 or
    helper_tag|length == 0

- name: Get all images for this deployment
  shell: >-
    docker images --format {% raw %}'{{.Repository}}:{{.Tag }}' {% endraw %}
    | grep 'hyperledger/fabric-' || :
  args:
    chdir: "{{ fabricpath }}"
  register: rawimages
  when: fabric.baseimage_tag == '' and inventory_hostname in groups['builders']

- name: Save all the docker images
  shell: >-
    docker save -o {{ fabricworkdir }}/images/fabricimages.tar
    {{ rawimages.stdout_lines | join(' ') }}
  args:
    chdir: "{{ gopath }}"
  when: fabric.baseimage_tag == '' and 
        rawimages is defined and 
        rawimages.stdout_lines|length > 0
  tags: "saveimages"

- name: Create the project version file
  template:
    src: "{{ playbook_dir }}/../deploy_compose/fabricbuild/templates/VERSION.j2"
    dest: "{{ fabricworkdir }}/images/VERSION"
  when: inventory_hostname in groups['builders']
