- name: Install libselinux-python
  yum:
    name: libselinux-python
    state: present

- name: Check if Red Hat 7
  shell: cat /etc/redhat-release | grep '^Red Hat Enterprise Linux Server release 7'
  register: check_RedHat7
  failed_when: false

- name: Add epel-release
  command: rpm -ivh https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm
  when: check_RedHat7.rc == 0

- name: Yum install latest epel-release
  yum:
    name: epel-release
    state: latest

- name: Install 
  yum:
    name: "{{ item }}"
    state: present
  with_items:
    - yum-utils
    - curl-devel
    - expat-devel
    - gettext-devel
    - openssl-devel
    - zlib-devel
    - gcc
    - perl-ExtUtils-MakeMaker

### Build git
# - name: Install latest git
#   yum:
#     name: git
#     state: latest


- name: Check if git is installed
  shell: '/usr/local/bin/git version; /usr/local/bin/git version | grep "version 2.1[0-9]."'
  register: git_check
  failed_when: false

- debug:
    msg: "{{ git_check }}"

- name: Remove git
  yum:
    name: git
    state: absent
  when: git_check.rc > 0

- file:
    path: /tmp/build
    state: directory
    mode: 0755
  when: git_check.rc > 0

- name: Unarchive git
  unarchive:
    src: https://github.com/git/git/archive/v2.15.1.tar.gz
    dest: /tmp/build
    remote_src: yes
  when: git_check.rc > 0

- name: Install git
  command: bash -c 'make prefix=/usr/local all'
  args:
    chdir: /tmp/build/git-2.15.1
  when: git_check.rc > 0

- command: bash -c 'make prefix=/usr/local install'
  args:
    chdir: /tmp/build/git-2.15.1
  when: git_check.rc > 0

# - lineinfile: 
#     line: "pathmunge /usr/local/git/bin/"
#     dest: "/etc/profile.d/git.sh"
#     insertafter: EOF
#     state: present
#   when: git_check.rc > 0

# - command: bash -c 'chmod +x /etc/profile.d/git.sh;
#                     source /etc/bashrc'
#   when: git_check.rc > 0

# - command: bash -c 'source /etc/bashrc'
#   args:
#     chdir: /tmp/build/git-2.14.3



- name: Add Docker repository.
  get_url:
    url: "https://download.docker.com/linux/centos/docker-ce.repo"
    dest: '/etc/yum.repos.d/docker-ce.repo'
    owner: root
    group: root
    mode: 0644

# - name: Configure Docker Edge repo.
#   ini_file:
#     dest: '/etc/yum.repos.d/docker-ce.repo'
#     section: 'docker-ce-edge'
#     option: enabled
#     value: '0'

# - name: Configure Docker Test repo.
#   ini_file:
#     dest: '/etc/yum.repos.d/docker-ce.repo'
#     section: 'docker-ce-test'
#     option: enabled
#     value: '0'

- name: Install packages1
  yum:
    name: "{{ item }}"
  with_items:
    - ['device-mapper-persistent-data', 'lvm2', 'ca-certificates']

- name: Install packages2
  yum:
    name: "{{ item }}"
  with_items:
    - ['docker-ce', 'libtool', 'libtool-ltdl-devel', 'net-tools', 'autoconf', 'automake']

- name: Install packages3
  yum:
    name: "{{ item }}"
  with_items:
    - ['make', 'gcc-c++', 'unzip']

- name: Install python-pip
  yum:
    name: python-pip

- name: Start docker
  service:
    name: docker
    state: started

# - name: Fix up the search domain
#   lineinfile:
#     path: /etc/sysconfig/network
#     state: present
#     line: SEARCH="{{ cluster.domain | default('fabric') }}"